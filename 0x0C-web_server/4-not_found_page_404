#!/usr/bin/env bash
# Configures an Nginx server so that /redirects_me redirects to another page.
# The redirection is configured as a "301 Moved Permanently"
# Includes a costom 404 page containing "Ceci n'est pas une page"

# Updates the package lists for available software package.
apt-get update
# Installs the Nginx web server.
apt-get install -y nginx

# Creates the /etc/nginx/html directory, which will serve as the document root directory of nginx
mkdir /etc/nginx/html
# Creates an empty index.html file inside the /etc/nginx/html directory
touch /etc/nginx/html/index.html
# Set the content of the index.html file to "Hello World!" using the echo command.
echo "Hello World!" > /etc/nginx/html/index.html
# Sets nginx to listen on port 80 and serve files from the /etc/nginx/html directory.
printf %s "serve {
    listen	80;
    listen	[::]:80 default_server;
    root	/etc/nginx/html;
    index	index.html index.htm;
}
" > /etc/nginx/sites-available/default

# Paste a 404 response in the 404.html file
echo "Nginx installation and configuration completed."

# Configure a new server block for redirection
echo "server {
    listen	80;
    listen	[::]:80;
    root /var/www/html;
    index	index.html index.htm;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    location /redirect_me {
        return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;
    }
    error_page 404 /404.html;
    location /404 {
      root /etc/nginx/html;
      internal;
}" | sudo tee /etc/nginx/sites-available/redirect

# Enable the new site configuration
sudo ln -s /etc/nginx/sites-available/redirect /etc/nginx/sites-enabled/

# Test Nginx configuration and reload
sudo nginx -t
sudo service nginx reload
